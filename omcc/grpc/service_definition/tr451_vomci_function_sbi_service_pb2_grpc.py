# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import omcc.grpc.service_definition.tr451_vomci_function_sbi_message_pb2 as tr451__vomci__function__sbi__message__pb2


class OmciFunctionHelloSbiStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.HelloVomci = channel.unary_unary(
                '/tr451_vomci_function_sbi_service.OmciFunctionHelloSbi/HelloVomci',
                request_serializer=tr451__vomci__function__sbi__message__pb2.HelloVomciRequest.SerializeToString,
                response_deserializer=tr451__vomci__function__sbi__message__pb2.HelloVomciResponse.FromString,
                )


class OmciFunctionHelloSbiServicer(object):
    """Missing associated documentation comment in .proto file"""

    def HelloVomci(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OmciFunctionHelloSbiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'HelloVomci': grpc.unary_unary_rpc_method_handler(
                    servicer.HelloVomci,
                    request_deserializer=tr451__vomci__function__sbi__message__pb2.HelloVomciRequest.FromString,
                    response_serializer=tr451__vomci__function__sbi__message__pb2.HelloVomciResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'tr451_vomci_function_sbi_service.OmciFunctionHelloSbi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OmciFunctionHelloSbi(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def HelloVomci(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tr451_vomci_function_sbi_service.OmciFunctionHelloSbi/HelloVomci',
            tr451__vomci__function__sbi__message__pb2.HelloVomciRequest.SerializeToString,
            tr451__vomci__function__sbi__message__pb2.HelloVomciResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class OmciFunctionMessageSbiStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListenForOmciRx = channel.unary_stream(
                '/tr451_vomci_function_sbi_service.OmciFunctionMessageSbi/ListenForOmciRx',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=tr451__vomci__function__sbi__message__pb2.OmciPacket.FromString,
                )
        self.OmciTx = channel.unary_unary(
                '/tr451_vomci_function_sbi_service.OmciFunctionMessageSbi/OmciTx',
                request_serializer=tr451__vomci__function__sbi__message__pb2.OmciPacket.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class OmciFunctionMessageSbiServicer(object):
    """Missing associated documentation comment in .proto file"""

    def ListenForOmciRx(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OmciTx(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OmciFunctionMessageSbiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListenForOmciRx': grpc.unary_stream_rpc_method_handler(
                    servicer.ListenForOmciRx,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=tr451__vomci__function__sbi__message__pb2.OmciPacket.SerializeToString,
            ),
            'OmciTx': grpc.unary_unary_rpc_method_handler(
                    servicer.OmciTx,
                    request_deserializer=tr451__vomci__function__sbi__message__pb2.OmciPacket.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'tr451_vomci_function_sbi_service.OmciFunctionMessageSbi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OmciFunctionMessageSbi(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def ListenForOmciRx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/tr451_vomci_function_sbi_service.OmciFunctionMessageSbi/ListenForOmciRx',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            tr451__vomci__function__sbi__message__pb2.OmciPacket.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OmciTx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tr451_vomci_function_sbi_service.OmciFunctionMessageSbi/OmciTx',
            tr451__vomci__function__sbi__message__pb2.OmciPacket.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
